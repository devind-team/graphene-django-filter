name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
      - name: Install dependencies
        run: poetry install
      - name: Run linter
        run: poetry run flake8

  test:
    name: Test
    needs: [lint]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: graphene_django_filter
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run python manage.py test

  coverage:
    name: Coverage
    needs: [test]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: graphene_django_filter
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
      - name: Install dependencies
        run: poetry install
      - name: Coverage
        run: poetry run coverage run manage.py test
  release:
    name: Release
    needs: [coverage]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # This action uses Python Semantic Release v8
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.7.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@master
        # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
        # See https://github.com/actions/runner/issues/1173
        if: steps.release.outputs.released == 'true'

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@v8.7.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
